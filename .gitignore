venv/
build/
*.charm
.tox/
.coverage
__pycache__/
*.py[cod]
.idea
.vscode

*.tar.gz
*.tar.xz
cloudinit-userdata.yaml
/.pytest_cache/

# Moving to Poetry, we do not need this file to be pushed any longer
/requirements.txt
/requirements-last-build.txt

########################################################
#
# Terraform .gitignore
#
########################################################

# Local .terraform directories
**/.terraform/*
*.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Generated files
*.key
credentials*

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# BEGIN VALE WORKFLOW IGNORE
.vale/styles/*
!.vale/styles/local
!.vale/styles/config/

.vale/styles/config/*
!.vale/styles/config/vocabularies/

.vale/styles/config/vocabularies/*
!.vale/styles/config/vocabularies/local
# END VALE WORKFLOW IGNORE
